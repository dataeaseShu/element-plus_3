@use 'sass:map';

@use 'mixins/mixins' as *;
@use 'common/var' as *;

$checked-icon: "data:image/svg+xml;utf8,%3Csvg class='icon' width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath fill='currentColor' d='M6.14507 11.6065L13.4518 4.29978C13.582 4.1696 13.7931 4.1696 13.9232 4.29978L14.3946 4.77118C14.5248 4.90136 14.5248 5.11241 14.3946 5.24259L6.38077 13.2565C6.25059 13.3866 6.03954 13.3866 5.90936 13.2565L1.66672 9.01382C1.53655 8.88365 1.53655 8.67259 1.66672 8.54242L2.13813 8.07102C2.2683 7.94084 2.47936 7.94084 2.60953 8.07102L6.14507 11.6065Z'%3E%3C/path%3E%3C/svg%3E";

@mixin checked-icon {
  content: '';
  position: absolute;
  top: 50%;
  right: 12px;
  border-top: none;
  border-right: none;
  background-repeat: no-repeat;
  background-position: center;
  background-color: map.get($select-option, 'selected-text-color');
  mask: url('#{$checked-icon}') no-repeat;
  mask-size: 100% 100%;
  -webkit-mask: url('#{$checked-icon}') no-repeat;
  -webkit-mask-size: 100% 100%;
  transform: translateY(-50%);
  width: 16px;
  height: 16px;
}

@include b(select-dropdown) {
  @include e(item) {
    font-size: map.get($select, 'font-size');
    // 20 as the padding of option item, 12 as the size of âœ“ icon size
    padding: 0 26px 0 12px;
    position: relative;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    color: map.get($select-option, 'text-color');
    height: map.get($select-option, 'height');
    line-height: map.get($select-option, 'height');
    box-sizing: border-box;
    cursor: pointer;

    @include when(hovering) {
      background-color: map.get($select-option, 'hover-background');
    }

    @include when(selected) {
      color: map.get($select-option, 'selected-text-color');
    }

    @include when(disabled) {
      color: map.get($select-option, 'disabled-color');
      cursor: not-allowed;
      background-color: unset;
    }
  }

  .#{$namespace}-select-dropdown__item.is-selected {
    &::after {
      @include checked-icon;
    }
  }

  .#{$namespace}-checkbox + .#{$namespace}-select-dropdown__item.is-selected::after{
    display: none;
  }

  .#{$namespace}-select-dropdown__item.is-disabled {
    &::after {
      background-color: map.get($select-option, 'disabled-color');
    }
  }
}
