{"code":"(()=>{\nvar __create=Object.create;var __defProp=Object.defineProperty;var __getOwnPropDesc=Object.getOwnPropertyDescriptor;var __getOwnPropNames=Object.getOwnPropertyNames;var __getProtoOf=Object.getPrototypeOf;var __hasOwnProp=Object.prototype.hasOwnProperty;var __name=(target,value)=>__defProp(target,\"name\",{value,configurable:true});var __copyProps=(to,from,except,desc)=>{if(from&&typeof from===\"object\"||typeof from===\"function\"){for(let key of __getOwnPropNames(from))if(!__hasOwnProp.call(to,key)&&key!==except)__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable})}return to};var __toESM=(mod,isNodeMode,target)=>(target=mod!=null?__create(__getProtoOf(mod)):{},__copyProps(isNodeMode||!mod||!mod.__esModule?__defProp(target,\"default\",{value:mod,enumerable:true}):target,mod));var import_path=__toESM(require(\"path\"));var import_fs=require(\"fs\");var import_fast_glob=__toESM(require(\"fast-glob\"));var import_octokit=require(\"octokit\");var import_consola=__toESM(require(\"consola\"));var import_chalk=__toESM(require(\"chalk\"));var import_lodash_unified=require(\"lodash-unified\");var import_build_utils=require(\"@element-plus/build-utils\");var import_build_constants=require(\"@element-plus/build-constants\");const fetchCommits=__name(async options=>{const query=`{\n    repository(owner: \"${import_build_constants.REPO_OWNER}\", name: \"${import_build_constants.REPO_NAME}\") {\n      object(expression: \"${import_build_constants.REPO_BRANCH}\") {\n        ... on Commit {\n          ${options.map(({path:path2,after},index)=>{return`\n              path${index}: history(path: \"${path2}\"${after?`, after: \"${after}\"`:\"\"}) {\n                nodes {\n                  oid\n                  author {\n                    avatarUrl\n                    date\n                    email\n                    name\n                    user {\n                      login\n                    }\n                  }\n                }\n                pageInfo {\n                  hasNextPage\n                  endCursor\n                }\n              }`}).join(\"\\n\")}\n        }\n      }\n    }\n  }`;const response=(await octokit.graphql(query)).repository.object;return Object.fromEntries(Object.entries(response).map(([key,result])=>{const index=+key.replace(\"path\",\"\");return[index,result]}))},\"fetchCommits\");const calcContributors=__name(commits=>{const contributors={};for(const{author}of commits){const login=author.user?.login;if(!login)continue;if(!contributors[login])contributors[login]={login,name:author.name,email:author.email,avatar:author.avatarUrl,count:0};contributors[login].count++}return Object.values(contributors).sort((a,b)=>b.count-a.count)},\"calcContributors\");const getContributorsByComponents=__name(async components=>{let options=components.flatMap(component=>[{key:component,path:`packages/components/${component}`},{key:component,path:`packages/theme-chalk/src/${component}.scss`},{key:component,path:`docs/examples/${component}`},{key:component,path:`docs/en-US/component/${component}.md`}]);const commits={};do{const results=await fetchCommits(options);for(const[i,result]of Object.values(results).entries()){const component=options[i].key;if(!commits[component])commits[component]=[];commits[component].push(...result.nodes)}options=options.map((option,index)=>{const pageInfo=results[index].pageInfo;const after=pageInfo.hasNextPage?pageInfo.endCursor:void 0;return{...option,after}}).filter(option=>!!option.after)}while(options.length>0);return(0,import_lodash_unified.mapValues)(commits,commits2=>calcContributors((0,import_lodash_unified.uniqBy)(commits2,\"oid\")))},\"getContributorsByComponents\");async function getContributors(){if(!process.env.GITHUB_TOKEN)throw new Error(\"GITHUB_TOKEN is empty\");const components=await(0,import_fast_glob.default)(\"*\",{cwd:import_path.default.resolve(import_build_utils.projRoot,\"packages/components\"),onlyDirectories:true});let contributors={};import_consola.default.info(\"Fetching contributors...\");for(const chunkComponents of(0,import_lodash_unified.chunk)(components,10)){contributors={...contributors,...await getContributorsByComponents(chunkComponents)};import_consola.default.success(import_chalk.default.green(`Fetched contributors: ${chunkComponents.join(\", \")}`))}return contributors}__name(getContributors,\"getContributors\");const pathOutput=import_path.default.resolve(__dirname,\"..\",\"dist\");const pathDest=import_path.default.resolve(pathOutput,\"contributors.json\");const octokit=new import_octokit.Octokit({auth:process.env.GITHUB_TOKEN});async function main(){await(0,import_build_utils.ensureDir)(pathOutput);let contributors;if(process.env.DEV){if((0,import_fs.existsSync)(pathDest))return;contributors={}}else{contributors=await getContributors().catch(err=>{(0,import_build_utils.errorAndExit)(err)})}await(0,import_build_utils.writeJson)(pathDest,contributors);import_consola.default.success(import_chalk.default.green(\"Contributors generated\"))}__name(main,\"main\");main();\n})()\n","warnings":[],"map":{"version":3,"mappings":"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","names":["path","commits","glob","consola","chalk"],"sources":["/Users/st/Desktop/大聪明/element-plus/internal/metadata/src/contributor.ts"],"sourcesContent":[null]}}